name: DeciMojo Unit Tests
on:
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: read

jobs:
  testing-decimojo:
    name: with ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # os: ["macos-latest"]
        os: ["ubuntu-22.04"]

    runs-on: ${{ matrix.os }}
    timeout-minutes: 30

    defaults:
      run:
        shell: bash
    env:
      DEBIAN_FRONTEND: noninteractive

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # - name: Install GLIBC
      #   run: |
      #     sudo apt-get update
      #     mkdir $HOME/glibc/ && cd $HOME/glibc
      #     wget http://ftp.gnu.org/gnu/libc/glibc-2.39.tar.gz
      #     tar -xvf glibc-2.39.tar.gz
      #     cd glibc-2.39
      #     mkdir build 
      #     mkdir glibc-2.39-install
      #     cd build
      #     ~/glibc/glibc-2.39/configure --prefix=$HOME/glibc/glibc-2.39-install
      #     make -j
      #     make install

      - name: Install magic
        run: |
          curl -ssL https://magic.modular.com/deb181c4-455c-4abe-a263-afcff49ccf67 | bash
      
      - name: Add path
        run: |
          echo "MODULAR_HOME=$HOME/.modular" >> $GITHUB_ENV
          echo "$HOME/.modular/bin"  >> $GITHUB_PATH
          echo "$HOME/.modular/pkg/packages.modular.com_mojo/bin"  >> $GITHUB_PATH

      - name: Activate virtualenv
        run: |
          python3 -m venv $HOME/venv/
          . $HOME/venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Magic install
        run: |
          magic install

      - name: Build package
        run: |
          magic run mojo package src/decimojo
          cp decimojo.mojopkg tests/
          cp decimojo.mojopkg benches/

      - name: Run tests and benches
        run: |
          magic run mojo test tests
          magic run bench

      - name: Install pre-commit
        run: |
          pip install pre-commit
          pre-commit install
      
      - name: Run pre-commit
        run: | 
          magic install
          pre-commit run --all-files